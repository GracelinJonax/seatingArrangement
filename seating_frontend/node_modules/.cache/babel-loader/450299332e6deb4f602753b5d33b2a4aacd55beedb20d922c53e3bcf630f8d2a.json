{"ast":null,"code":"import axios from 'axios';\nimport { useState } from 'react';\n\n// const API_BASE_URL = 'http://localhost:8090/';\nconst API_BASE_URL = 'http://192.168.1.220:8081/api/v1';\nconst baseApi = axios.create({\n  baseURL: API_BASE_URL\n});\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\nconst accessToken = localStorage.getItem('accessToken');\nif (accessToken) {\n  api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n}\napi.interceptors.request.use(config => {\n  const accessToken = localStorage.getItem('accessToken');\n  if (accessToken) {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const loginApi = async data => {\n  try {\n    const response = await baseApi.post(`/login`, data);\n    const accessToken = response.data.data.accessToken;\n    localStorage.setItem('accessToken', accessToken);\n    api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n    console.log(accessToken);\n    return response.data;\n  } catch (error) {\n    console.log('Failed to login layout', error);\n    return error;\n  }\n};\nexport const registerApi = async data => {\n  try {\n    const response = await baseApi.post(`/sign_up`, data);\n    return response.data;\n  } catch (error) {\n    // console.log('Failed to register layout', error)\n    return error;\n  }\n};\nexport const logoutApi = async () => {\n  try {\n    const accessToken = localStorage.getItem('accessToken');\n    console.log(accessToken);\n    const response = await baseApi.post(`/logout`, {\n      accessToken: accessToken\n    });\n    const responseData = response;\n    console.log(responseData);\n    return responseData;\n  } catch (error) {\n    console.log('Failed to register layout', error);\n  }\n};\nexport const createLayoutApi = async (name, layout) => {\n  console.log(name, layout);\n  try {\n    const response = await api.post(`/compnay`, {\n      \"companyName\": name,\n      \"companyLayoutList\": layout\n    });\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to create layout', error);\n  }\n};\nexport const getAlllayoutApi = async name => {\n  try {\n    const response = await api.get(`/Layout/${name}`);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to get all layout', error);\n  }\n};\nexport const allocationApi = async data => {\n  try {\n    const response = await api.post(\"/Allocation\", data);\n    console.log(response);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to get allocation', error);\n  }\n};\nexport const csvFileApi = async (file, setInCorrectFile) => {\n  try {\n    const response = await api.post(\"/Allocation/csvFile\", file, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setInCorrectFile(false);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    setInCorrectFile(true);\n    console.log('Failed to get allocation', error);\n  }\n};\nexport const addLayoutApi = async (name, layout) => {\n  console.log(layout);\n  try {\n    const response = await api.post(`/Layout/updateLayout`, {\n      \"companyName\": name,\n      \"defaultLayout\": layout\n    });\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to add layout', error);\n  }\n};\nexport const updateLayoutApi = async (id, name, layout) => {\n  console.log(layout);\n  try {\n    const response = await api.post(`/Layout/updateLayout`, {\n      \"layoutId\": id,\n      \"companyName\": name,\n      \"defaultLayout\": layout\n    });\n    const layoutData = response.data;\n    console.log(layoutData);\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to update layout', error);\n  }\n};\nexport const deleteLayoutApi = async (id, name) => {\n  console.log(id, name);\n  try {\n    const response = await api.post(`/Layout/updateLayout`, {\n      \"layoutId\": id,\n      \"companyName\": name\n    });\n    const layoutData = response.data;\n    console.log(layoutData);\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to delete layout', error);\n  }\n};\nexport const getAllAllocationApi = async id => {\n  try {\n    const response = await api.get(`/Allocation/${id}`);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to get all allocation', error);\n  }\n};","map":{"version":3,"names":["axios","useState","API_BASE_URL","baseApi","create","baseURL","api","accessToken","localStorage","getItem","defaults","headers","common","interceptors","request","use","config","Authorization","error","Promise","reject","loginApi","data","response","post","setItem","console","log","registerApi","logoutApi","responseData","createLayoutApi","name","layout","layoutData","getAlllayoutApi","get","allocationApi","csvFileApi","file","setInCorrectFile","addLayoutApi","updateLayoutApi","id","deleteLayoutApi","getAllAllocationApi"],"sources":["/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/actions/ApiCall.js"],"sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\n\n// const API_BASE_URL = 'http://localhost:8090/';\nconst API_BASE_URL = 'http://192.168.1.220:8081/api/v1';\n\nconst baseApi = axios.create({\n    baseURL: API_BASE_URL,\n});\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n});\n\nconst accessToken = localStorage.getItem('accessToken');\nif (accessToken) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n}\n\napi.interceptors.request.use(\n    (config) => {\n        const accessToken = localStorage.getItem('accessToken');\n        if (accessToken) {\n            config.headers.Authorization = `Bearer ${accessToken}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport const loginApi = async (data) => {\n    try {\n        const response = await baseApi.post(`/login`, data);\n        const accessToken=response.data.data.accessToken\n        localStorage.setItem('accessToken', accessToken);\n        api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n        console.log(accessToken);\n        return response.data;\n    }\n     catch (error) {\n        console.log('Failed to login layout', error)\n        return error;\n    }\n};\nexport const registerApi = async (data) => {\n    try {\n        const response = await baseApi.post(`/sign_up`, data);\n        return response.data;\n    } catch (error) {\n        // console.log('Failed to register layout', error)\n        return error;\n    }\n};\n\nexport const logoutApi = async () => {\n    try {\n        const accessToken = localStorage.getItem('accessToken');\n        console.log(accessToken)\n        const response = await baseApi.post(`/logout`,{\n            accessToken:accessToken\n        });\n        const responseData = response;\n        console.log(responseData)\n        return responseData;\n    } catch (error) {\n        console.log('Failed to register layout', error)\n    }\n};\n\n\nexport const createLayoutApi = async (name, layout) => {\n    console.log(name, layout)\n    try {\n        const response = await api.post(`/compnay`,\n            {\n                \"companyName\": name,\n                \"companyLayoutList\": layout\n            }\n        );\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to create layout', error)\n    }\n};\nexport const getAlllayoutApi = async (name) => {\n    try {\n        const response = await api.get(`/Layout/${name}`);\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to get all layout', error)\n    }\n};\n\nexport const allocationApi = async (data) => {\n    try {\n        const response = await api.post(\"/Allocation\", data);\n        console.log(response)\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to get allocation', error)\n    }\n};\n\nexport const csvFileApi = async (file, setInCorrectFile) => {\n    try {\n        const response = await api.post(\"/Allocation/csvFile\", file,\n            {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n        setInCorrectFile(false)\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        setInCorrectFile(true)\n        console.log('Failed to get allocation', error)\n    }\n};\n\nexport const addLayoutApi = async (name, layout) => {\n    console.log(layout)\n    try {\n        const response = await api.post(`/Layout/updateLayout`,\n            {\n                \"companyName\": name,\n                \"defaultLayout\": layout\n            }\n        );\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to add layout', error)\n    }\n};\n\nexport const updateLayoutApi = async (id, name, layout) => {\n    console.log(layout)\n    try {\n        const response = await api.post(`/Layout/updateLayout`,\n            {\n                \"layoutId\": id,\n                \"companyName\": name,\n                \"defaultLayout\": layout\n            }\n        );\n        const layoutData = response.data;\n        console.log(layoutData)\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to update layout', error)\n    }\n};\n\nexport const deleteLayoutApi = async (id, name) => {\n    console.log(id, name)\n    try {\n        const response = await api.post(`/Layout/updateLayout`,\n            {\n                \"layoutId\": id,\n                \"companyName\": name\n            }\n        );\n        const layoutData = response.data;\n        console.log(layoutData)\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to delete layout', error)\n    }\n};\n\nexport const getAllAllocationApi = async (id) => {\n    try {\n        const response = await api.get(`/Allocation/${id}`);\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to get all allocation', error)\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}