{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8090/';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\nexport const createLayout = async (name, layout) => {\n  console.log(name, layout);\n  try {\n    const response = await api.post(`/Layout`, {\n      \"companyName\": name,\n      \"companyLayoutList\": layout\n    });\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to create layout', error);\n  }\n};\nexport const getAlllayout = async name => {\n  try {\n    const response = await api.get(`/Layout/${name}`);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to get all layout', error);\n  }\n};\nexport const allocationApi = async data => {\n  try {\n    const response = await api.post(\"/Allocation\", data);\n    console.log(response);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to get allocation', error);\n  }\n};\nexport const csvFileApi = async (file, setInCorrectFile) => {\n  try {\n    const response = await api.post(\"/Allocation/csvFile\", file, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setInCorrectFile(false);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    setInCorrectFile(true);\n    console.log('Failed to get allocation', error);\n  }\n};\nexport const addLayout = async (name, layout) => {\n  console.log(layout);\n  try {\n    const response = await api.post(`/Layout/updateLayout`, {\n      \"companyName\": name,\n      \"defaultLayout\": layout\n    });\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to add layout', error);\n  }\n};\nexport const updateLayout = async (id, name, layout) => {\n  console.log(layout);\n  try {\n    const response = await api.post(`/Layout/updateLayout`, {\n      \"layoutId\": id,\n      \"companyName\": name,\n      \"defaultLayout\": layout\n    });\n    const layoutData = response.data;\n    console.log(layoutData);\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to update layout', error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","createLayout","name","layout","console","log","response","post","layoutData","data","error","getAlllayout","get","allocationApi","csvFileApi","file","setInCorrectFile","headers","addLayout","updateLayout","id"],"sources":["/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/actions/ApiCall.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8090/';\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n});\n\nexport const createLayout = async (name, layout) => {\n    console.log(name, layout)\n    try {\n        const response = await api.post(`/Layout`,\n            {\n                \"companyName\": name,\n                \"companyLayoutList\": layout\n            }\n        );\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to create layout', error)\n    }\n};\nexport const getAlllayout = async (name) => {\n    try {\n        const response = await api.get(`/Layout/${name}`);\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to get all layout', error)\n    }\n};\n\nexport const allocationApi = async (data) => {\n    try {\n        const response = await api.post(\"/Allocation\", data);\n        console.log(response)\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to get allocation', error)\n    }\n};\n\nexport const csvFileApi = async (file, setInCorrectFile) => {\n    try {\n        const response = await api.post(\"/Allocation/csvFile\", file,\n            {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n        setInCorrectFile(false)\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        setInCorrectFile(true)\n        console.log('Failed to get allocation', error)\n    }\n};\n\nexport const addLayout = async (name, layout) => {\n    console.log(layout)\n    try {\n        const response = await api.post(`/Layout/updateLayout`,\n            {\n                \"companyName\": name,\n                \"defaultLayout\": layout\n            }\n        );\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to add layout', error)\n    }\n};\n\nexport const updateLayout = async (id, name, layout) => {\n    console.log(layout)\n    try {\n        const response = await api.post(`/Layout/updateLayout`,\n            {\n                \"layoutId\": id,\n                \"companyName\": name,\n                \"defaultLayout\": layout\n            }\n        );\n        const layoutData = response.data;\n        console.log(layoutData)\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to update layout', error)\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}