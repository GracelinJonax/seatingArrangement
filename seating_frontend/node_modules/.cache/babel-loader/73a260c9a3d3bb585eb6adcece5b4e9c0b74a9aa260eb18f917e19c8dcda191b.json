{"ast":null,"code":"import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:8090/';\nconst API_BASE_URL = 'http://192.168.1.220:8081/';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\napi.interceptors.request.use(config => {\n  const accessToken = \"YOUR_ACCESS_TOKEN_HERE\";\n  if (accessToken) {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const createLayoutApi = async (name, layout) => {\n  console.log(name, layout);\n  try {\n    const response = await api.post(`/Layout`, {\n      \"companyName\": name,\n      \"companyLayoutList\": layout\n    });\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to create layout', error);\n  }\n};\nexport const getAlllayoutApi = async name => {\n  try {\n    const response = await api.get(`/Layout/${name}`);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to get all layout', error);\n  }\n};\nexport const allocationApi = async data => {\n  try {\n    const response = await api.post(\"/Allocation\", data);\n    console.log(response);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to get allocation', error);\n  }\n};\nexport const csvFileApi = async (file, setInCorrectFile) => {\n  try {\n    const response = await api.post(\"/Allocation/csvFile\", file, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setInCorrectFile(false);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    setInCorrectFile(true);\n    console.log('Failed to get allocation', error);\n  }\n};\nexport const addLayoutApi = async (name, layout) => {\n  console.log(layout);\n  try {\n    const response = await api.post(`/Layout/updateLayout`, {\n      \"companyName\": name,\n      \"defaultLayout\": layout\n    });\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to add layout', error);\n  }\n};\nexport const updateLayoutApi = async (id, name, layout) => {\n  console.log(layout);\n  try {\n    const response = await api.post(`/Layout/updateLayout`, {\n      \"layoutId\": id,\n      \"companyName\": name,\n      \"defaultLayout\": layout\n    });\n    const layoutData = response.data;\n    console.log(layoutData);\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to update layout', error);\n  }\n};\nexport const deleteLayoutApi = async (id, name) => {\n  console.log(id, name);\n  try {\n    const response = await api.post(`/Layout/updateLayout`, {\n      \"layoutId\": id,\n      \"companyName\": name\n    });\n    const layoutData = response.data;\n    console.log(layoutData);\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to delete layout', error);\n  }\n};\nexport const getAllAllocationApi = async id => {\n  try {\n    const response = await api.get(`/Allocation/${id}`);\n    const layoutData = response.data;\n    return layoutData;\n  } catch (error) {\n    console.log('Failed to get all allocation', error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","interceptors","request","use","config","accessToken","headers","Authorization","error","Promise","reject","createLayoutApi","name","layout","console","log","response","post","layoutData","data","getAlllayoutApi","get","allocationApi","csvFileApi","file","setInCorrectFile","addLayoutApi","updateLayoutApi","id","deleteLayoutApi","getAllAllocationApi"],"sources":["/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/actions/ApiCall.js"],"sourcesContent":["import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:8090/';\nconst API_BASE_URL = 'http://192.168.1.220:8081/';\n\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n});\n\napi.interceptors.request.use(\n    (config) => {\n        const accessToken = \"YOUR_ACCESS_TOKEN_HERE\";\n        if (accessToken) {\n            config.headers.Authorization = `Bearer ${accessToken}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\nexport const createLayoutApi = async (name, layout) => {\n    console.log(name, layout)\n    try {\n        const response = await api.post(`/Layout`,\n            {\n                \"companyName\": name,\n                \"companyLayoutList\": layout\n            }\n        );\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to create layout', error)\n    }\n};\nexport const getAlllayoutApi = async (name) => {\n    try {\n        const response = await api.get(`/Layout/${name}`);\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to get all layout', error)\n    }\n};\n\nexport const allocationApi = async (data) => {\n    try {\n        const response = await api.post(\"/Allocation\", data);\n        console.log(response)\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to get allocation', error)\n    }\n};\n\nexport const csvFileApi = async (file, setInCorrectFile) => {\n    try {\n        const response = await api.post(\"/Allocation/csvFile\", file,\n            {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n        setInCorrectFile(false)\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        setInCorrectFile(true)\n        console.log('Failed to get allocation', error)\n    }\n};\n\nexport const addLayoutApi = async (name, layout) => {\n    console.log(layout)\n    try {\n        const response = await api.post(`/Layout/updateLayout`,\n            {\n                \"companyName\": name,\n                \"defaultLayout\": layout\n            }\n        );\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to add layout', error)\n    }\n};\n\nexport const updateLayoutApi = async (id, name, layout) => {\n    console.log(layout)\n    try {\n        const response = await api.post(`/Layout/updateLayout`,\n            {\n                \"layoutId\": id,\n                \"companyName\": name,\n                \"defaultLayout\": layout\n            }\n        );\n        const layoutData = response.data;\n        console.log(layoutData)\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to update layout', error)\n    }\n};\n\nexport const deleteLayoutApi = async (id, name) => {\n    console.log(id,name)\n    try {\n        const response = await api.post(`/Layout/updateLayout`,\n            {\n                \"layoutId\": id,\n                \"companyName\": name\n            }\n        );\n        const layoutData = response.data;\n        console.log(layoutData)\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to delete layout', error)\n    }\n};\n\nexport const getAllAllocationApi = async (id) => {\n    try {\n        const response = await api.get(`/Allocation/${id}`);\n        const layoutData = response.data;\n        return layoutData;\n    } catch (error) {\n        console.log('Failed to get all allocation', error)\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}