{"ast":null,"code":"var _jsxFileName = \"/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/components/UpdatePopup/UpdatePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./updatePopup.scss\";\nimport { Cell } from '../Cell/Cell';\nimport { updateLayoutApi } from '../../actions/ApiCall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdatePopup = ({\n  layoutSeleted\n}) => {\n  _s();\n  console.log(layoutSeleted);\n  const [layoutData, setLayoutData] = useState(layoutSeleted.companyLayout);\n  const updateCellValue = (rowIndex, colIndex, newValue) => {\n    const updatedLayout = [...layoutData];\n    updatedLayout[rowIndex][colIndex] = newValue;\n    setLayoutData(updatedLayout);\n  };\n  console.log(layoutData);\n  useEffect(() => {\n    async function updateLayout() {\n      try {\n        const res = await updateLayoutApi(layoutSeleted.layoutId, layoutData);\n      } catch (err) {\n        console.log(\"Error in updating\", err);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: layoutData === null || layoutData === void 0 ? void 0 : layoutData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row === null || row === void 0 ? void 0 : row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        update: true,\n        cellValue: cell,\n        updateValue: updateCellValue,\n        rowIndex: rowIndex,\n        colIndex: colIndex\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePopup, \"2hqzaBpwj1w+ghf/mRBWk0k50R0=\");\n_c = UpdatePopup;\nvar _c;\n$RefreshReg$(_c, \"UpdatePopup\");","map":{"version":3,"names":["React","useEffect","useState","Cell","updateLayoutApi","jsxDEV","_jsxDEV","UpdatePopup","layoutSeleted","_s","console","log","layoutData","setLayoutData","companyLayout","updateCellValue","rowIndex","colIndex","newValue","updatedLayout","updateLayout","res","layoutId","err","children","map","row","className","cell","update","cellValue","updateValue","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/components/UpdatePopup/UpdatePopup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport \"./updatePopup.scss\"\nimport { Cell } from '../Cell/Cell'\nimport { updateLayoutApi } from '../../actions/ApiCall'\n\nexport const UpdatePopup = ({ layoutSeleted }) => {\n    console.log(layoutSeleted)\n\n    const [layoutData, setLayoutData] = useState(layoutSeleted.companyLayout);\n\n    const updateCellValue = (rowIndex, colIndex, newValue) => {\n        const updatedLayout = [...layoutData];\n        updatedLayout[rowIndex][colIndex] = newValue;\n        setLayoutData(updatedLayout);\n    };\n    console.log(layoutData)\n\n    useEffect(() => {\n        async function updateLayout() {\n            try {\n                const res = await updateLayoutApi(\n                    layoutSeleted.layoutId,\n                    layoutData)\n            }catch(err){\n                console.log(\"Error in updating\",err)\n            }\n        }\n    })\n\n    return (\n        <div>\n            {layoutData?.map((row, rowIndex) => (\n                <div key={rowIndex} className=\"row\">\n                    {row?.map((cell, colIndex) => (\n                        <Cell\n                            update={true}\n                            key={colIndex}\n                            cellValue={cell}\n                            updateValue={updateCellValue}\n                            rowIndex={rowIndex}\n                            colIndex={colIndex}\n                        />\n                    ))}\n                </div>\n            ))}\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAC3B,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,eAAe,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC9CC,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;EAE1B,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAACM,aAAa,CAACM,aAAa,CAAC;EAEzE,MAAMC,eAAe,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,KAAK;IACtD,MAAMC,aAAa,GAAG,CAAC,GAAGP,UAAU,CAAC;IACrCO,aAAa,CAACH,QAAQ,CAAC,CAACC,QAAQ,CAAC,GAAGC,QAAQ;IAC5CL,aAAa,CAACM,aAAa,CAAC;EAChC,CAAC;EACDT,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EAEvBX,SAAS,CAAC,MAAM;IACZ,eAAemB,YAAYA,CAAA,EAAG;MAC1B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMjB,eAAe,CAC7BI,aAAa,CAACc,QAAQ,EACtBV,UAAU,CAAC;MACnB,CAAC,QAAMW,GAAG,EAAC;QACPb,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACY,GAAG,CAAC;MACxC;IACJ;EACJ,CAAC,CAAC;EAEF,oBACIjB,OAAA;IAAAkB,QAAA,EACKZ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEa,GAAG,CAAC,CAACC,GAAG,EAAEV,QAAQ,kBAC3BV,OAAA;MAAoBqB,SAAS,EAAC,KAAK;MAAAH,QAAA,EAC9BE,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAED,GAAG,CAAC,CAACG,IAAI,EAAEX,QAAQ,kBACrBX,OAAA,CAACH,IAAI;QACD0B,MAAM,EAAE,IAAK;QAEbC,SAAS,EAAEF,IAAK;QAChBG,WAAW,EAAEhB,eAAgB;QAC7BC,QAAQ,EAAEA,QAAS;QACnBC,QAAQ,EAAEA;MAAS,GAJdA,QAAQ;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKhB,CACJ;IAAC,GAVInB,QAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAA1B,EAAA,CA1CYF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}