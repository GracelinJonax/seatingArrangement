{"ast":null,"code":"var _jsxFileName = \"/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/components/UpdatePopup/UpdatePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./updatePopup.scss\";\nimport { Cell } from '../Cell/Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdatePopup = ({\n  layoutSeleted\n}) => {\n  _s();\n  var _companyLayout;\n  console.log(layoutSeleted);\n  const initialData = {\n    layoutId: \"d0cc32fe-6e47-4233-9583-170e98e6df77\",\n    companyName: \"demo\",\n    defaultLayout: [[1, 0, 1], [1, 1, 1]]\n  };\n\n  // Initialize state with the default layout\n  const [layoutData, setLayoutData] = useState(initialData);\n\n  // Function to update a single cell value\n  const updateCellValue = (rowIndex, cellIndex, newValue) => {\n    const updatedLayout = [...layoutData.defaultLayout];\n    updatedLayout[rowIndex][cellIndex] = newValue;\n    setLayoutData({\n      ...layoutData,\n      defaultLayout: updatedLayout\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1rem\"\n      },\n      children: (_companyLayout = companyLayout) === null || _companyLayout === void 0 ? void 0 : _companyLayout.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"1rem\"\n        },\n        children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            padding: \"1rem\"\n          },\n          onClick: () => updateLayout(rowIndex, cellIndex),\n          children: cell\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePopup, \"mGkb+d4/IigoN2IjEypFZ2TLaLg=\");\n_c = UpdatePopup;\nvar _c;\n$RefreshReg$(_c, \"UpdatePopup\");","map":{"version":3,"names":["React","useEffect","useState","Cell","jsxDEV","_jsxDEV","UpdatePopup","layoutSeleted","_s","_companyLayout","console","log","initialData","layoutId","companyName","defaultLayout","layoutData","setLayoutData","updateCellValue","rowIndex","cellIndex","newValue","updatedLayout","children","style","padding","companyLayout","map","row","cell","onClick","updateLayout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/components/UpdatePopup/UpdatePopup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport \"./updatePopup.scss\"\nimport { Cell } from '../Cell/Cell'\n\nexport const UpdatePopup = ({ layoutSeleted }) => {\n    console.log(layoutSeleted)\n    const initialData = {\n        layoutId: \"d0cc32fe-6e47-4233-9583-170e98e6df77\",\n        companyName: \"demo\",\n        defaultLayout: [\n          [1, 0, 1],\n          [1, 1, 1]\n        ]\n      };\n    \n      // Initialize state with the default layout\n      const [layoutData, setLayoutData] = useState(initialData);\n    \n      // Function to update a single cell value\n      const updateCellValue = (rowIndex, cellIndex, newValue) => {\n        const updatedLayout = [...layoutData.defaultLayout];\n        updatedLayout[rowIndex][cellIndex] = newValue;\n        setLayoutData({\n          ...layoutData,\n          defaultLayout: updatedLayout\n        });\n      };\n\n    return (\n        <div>\n            {/* <button onClick={updateLayout}>Update Layout</button> */}\n            <div style={{padding:\"1rem\"}}>\n                {companyLayout?.map((row, rowIndex) => (\n                    <div key={rowIndex} style={{padding:\"1rem\"}}>\n                        {row.map((cell, cellIndex) => (\n                            <span style={{padding:\"1rem\"}} key={cellIndex} onClick={()=>updateLayout(rowIndex,cellIndex)}>{cell}</span>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAC3B,SAASC,IAAI,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,cAAA;EAC9CC,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC;EAC1B,MAAMK,WAAW,GAAG;IAChBC,QAAQ,EAAE,sCAAsC;IAChDC,WAAW,EAAE,MAAM;IACnBC,aAAa,EAAE,CACb,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAEb,CAAC;;EAED;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAACU,WAAW,CAAC;;EAEzD;EACA,MAAMM,eAAe,GAAGA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,KAAK;IACzD,MAAMC,aAAa,GAAG,CAAC,GAAGN,UAAU,CAACD,aAAa,CAAC;IACnDO,aAAa,CAACH,QAAQ,CAAC,CAACC,SAAS,CAAC,GAAGC,QAAQ;IAC7CJ,aAAa,CAAC;MACZ,GAAGD,UAAU;MACbD,aAAa,EAAEO;IACjB,CAAC,CAAC;EACJ,CAAC;EAEH,oBACIjB,OAAA;IAAAkB,QAAA,eAEIlB,OAAA;MAAKmB,KAAK,EAAE;QAACC,OAAO,EAAC;MAAM,CAAE;MAAAF,QAAA,GAAAd,cAAA,GACxBiB,aAAa,cAAAjB,cAAA,uBAAbA,cAAA,CAAekB,GAAG,CAAC,CAACC,GAAG,EAAET,QAAQ,kBAC9Bd,OAAA;QAAoBmB,KAAK,EAAE;UAACC,OAAO,EAAC;QAAM,CAAE;QAAAF,QAAA,EACvCK,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,EAAET,SAAS,kBACrBf,OAAA;UAAMmB,KAAK,EAAE;YAACC,OAAO,EAAC;UAAM,CAAE;UAAiBK,OAAO,EAAEA,CAAA,KAAIC,YAAY,CAACZ,QAAQ,EAACC,SAAS,CAAE;UAAAG,QAAA,EAAEM;QAAI,GAA/DT,SAAS;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6D,CAC7G;MAAC,GAHIhB,QAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAA3B,EAAA,CAtCYF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}