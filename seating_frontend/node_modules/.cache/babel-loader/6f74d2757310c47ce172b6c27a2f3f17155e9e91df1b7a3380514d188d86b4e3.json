{"ast":null,"code":"var _jsxFileName = \"/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/components/UpdatePopup/UpdatePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./updatePopup.scss\";\nimport { Cell } from '../Cell/Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdatePopup = ({\n  layoutSeleted\n}) => {\n  _s();\n  console.log(layoutSeleted);\n  const initialData = {\n    layoutId: \"d0cc32fe-6e47-4233-9583-170e98e6df77\",\n    companyName: \"demo\",\n    defaultLayout: [[1, 0, 1], [1, 1, 1]]\n  };\n  const [layoutData, setLayoutData] = useState(layoutSeleted.defaultLayout);\n  const updateCellValue = (rowIndex, cellIndex, newValue) => {\n    const updatedLayout = [...layoutData.defaultLayout];\n    updatedLayout[rowIndex][cellIndex] = newValue;\n    setLayoutData({\n      ...layoutData,\n      defaultLayout: updatedLayout\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [layoutData.companyName, \" Layout\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: layoutData.defaultLayout.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            updateCellValue(rowIndex, cellIndex, cell === 1 ? 0 : 1);\n          },\n          style: {\n            cursor: 'pointer',\n            marginRight: '5px'\n          },\n          children: cell\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePopup, \"h6OzRSM5tolP7gCaf70uE9N+ozs=\");\n_c = UpdatePopup;\nvar _c;\n$RefreshReg$(_c, \"UpdatePopup\");","map":{"version":3,"names":["React","useEffect","useState","Cell","jsxDEV","_jsxDEV","UpdatePopup","layoutSeleted","_s","console","log","initialData","layoutId","companyName","defaultLayout","layoutData","setLayoutData","updateCellValue","rowIndex","cellIndex","newValue","updatedLayout","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","cell","onClick","style","cursor","marginRight","_c","$RefreshReg$"],"sources":["/home/divum/Desktop/seating frontend modifyed/seating-frontend/src/components/UpdatePopup/UpdatePopup.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport \"./updatePopup.scss\"\nimport { Cell } from '../Cell/Cell'\n\nexport const UpdatePopup = ({ layoutSeleted }) => {\n    console.log(layoutSeleted)\n    const initialData = {\n        layoutId: \"d0cc32fe-6e47-4233-9583-170e98e6df77\",\n        companyName: \"demo\",\n        defaultLayout: [\n            [1, 0, 1],\n            [1, 1, 1]\n        ]\n    };\n\n    const [layoutData, setLayoutData] = useState(layoutSeleted. defaultLayout);\n\n    const updateCellValue = (rowIndex, cellIndex, newValue) => {\n        const updatedLayout = [...layoutData.defaultLayout];\n        updatedLayout[rowIndex][cellIndex] = newValue;\n        setLayoutData({\n            ...layoutData,\n            defaultLayout: updatedLayout\n        });\n    };\n\n    return (\n        <div>\n            <h2>{layoutData.companyName} Layout</h2>\n            <div>\n                {layoutData.defaultLayout.map((row, rowIndex) => (\n                    <div key={rowIndex}>\n                        {row.map((cell, cellIndex) => (\n                            <span\n                                key={cellIndex}\n                                onClick={() => {\n                                    updateCellValue(rowIndex, cellIndex, cell === 1 ? 0 : 1);\n                                }}\n                                style={{ cursor: 'pointer', marginRight: '5px' }}\n                            >\n                                {cell}\n                            </span>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAC3B,SAASC,IAAI,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC9CC,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC;EAC1B,MAAMI,WAAW,GAAG;IAChBC,QAAQ,EAAE,sCAAsC;IAChDC,WAAW,EAAE,MAAM;IACnBC,aAAa,EAAE,CACX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAEjB,CAAC;EAED,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACK,aAAa,CAAEO,aAAa,CAAC;EAE1E,MAAMG,eAAe,GAAGA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,KAAK;IACvD,MAAMC,aAAa,GAAG,CAAC,GAAGN,UAAU,CAACD,aAAa,CAAC;IACnDO,aAAa,CAACH,QAAQ,CAAC,CAACC,SAAS,CAAC,GAAGC,QAAQ;IAC7CJ,aAAa,CAAC;MACV,GAAGD,UAAU;MACbD,aAAa,EAAEO;IACnB,CAAC,CAAC;EACN,CAAC;EAED,oBACIhB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,GAAKP,UAAU,CAACF,WAAW,EAAC,SAAO;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCrB,OAAA;MAAAiB,QAAA,EACKP,UAAU,CAACD,aAAa,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEV,QAAQ,kBACxCb,OAAA;QAAAiB,QAAA,EACKM,GAAG,CAACD,GAAG,CAAC,CAACE,IAAI,EAAEV,SAAS,kBACrBd,OAAA;UAEIyB,OAAO,EAAEA,CAAA,KAAM;YACXb,eAAe,CAACC,QAAQ,EAAEC,SAAS,EAAEU,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UAC5D,CAAE;UACFE,KAAK,EAAE;YAAEC,MAAM,EAAE,SAAS;YAAEC,WAAW,EAAE;UAAM,CAAE;UAAAX,QAAA,EAEhDO;QAAI,GANAV,SAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOZ,CACT;MAAC,GAXIR,QAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAlB,EAAA,CA5CYF,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}